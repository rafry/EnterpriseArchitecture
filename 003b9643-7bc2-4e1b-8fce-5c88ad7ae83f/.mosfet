{
  "layout": "panel",
  "rdbmsId": "003b9643-7bc2-4e1b-8fce-5c88ad7ae83f",
  "hidden": true,
  "engine": "EnterpriseArchitecture",
  "insightName": "Single System Coverage Report - 0",
  "recipe": "AddPanel ( 0 ) ;Panel ( 0 ) | AddPanelEvents ( { \"onSingleClick\" : { \"Unfilter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eUnfilterFrame(\u003cSelectedColumn\u003e);\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabledVisuals\" : [ \"Grid\" ] , \"disabled\" : false } ] } , \"onBrush\" : { \"Filter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eif(IsEmpty(\u003cSelectedValues\u003e), UnfilterFrame(\u003cSelectedColumn\u003e), SetFrameFilter(\u003cSelectedColumn\u003e\u003d\u003d\u003cSelectedValues\u003e));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabled\" : false } ] } } ) ;Panel ( 0 ) | RetrievePanelEvents ( ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" , \"\u003cencode\u003e{\"type\":\"echarts\"}\u003c/encode\u003e\" ) ;Panel ( 0 ) | SetPanelView ( \"federate-view\" , \"\u003cencode\u003e{\"core_engine\":\"EnterpriseArchitecture\"}\u003c/encode\u003e\" ) ;Panel ( 0 ) | SetPanelView ( \"param\" , \"\u003cencode\u003e{\"json\":[{\"label\":\"Filter By System\",\"description\":\"Select a system to analyze parameter alignments. Not all systems will have System Function or Capability Alignments.\",\"query\":\"CreateFrame ( grid ) .as ( [ \u0027FRAME518771\u0027 ] ) ;Database ( EnterpriseArchitecture ) | Select ( \u003cmetaDataType\u003eParent , \u003cmetaDataType\u003eParent__TotalLeafs , \u003cmetaDataType\u003e , System, \u003cmetaDataType\u003eParent__Level) .as ( [ \u003cmetaDataType\u003eParent , TotalLeafs , \u003cmetaDataType\u003e , System, Level] ) | Filter ( System \u003d\u003d [ \u0027\u003cSystem\u003e\u0027 ] ) | Filter ( \u003cmetaDataType\u003eParent__Level \u003d\u003d [\u003cLevel\u003e ] ) | Join (( \u003cmetaDataType\u003eParent , inner.join , \u003cmetaDataType\u003e ) , ( System , inner.join , \u003cmetaDataType\u003e ) ) | Import ( ) ; Panel ( 0 ) | SetPanelLabel ( \u0027Coverage Percentages\u0027 ) | SetPanelView ( \u0027visualization\u0027 ) ;Select ( \u003cmetaDataType\u003eParent , 100 * ( UniqueCount ( \u003cmetaDataType\u003e ) ) / TotalLeafs, ( UniqueCount ( \u003cmetaDataType\u003e ) ) ) .as ( [ \u003cmetaDataType\u003eParent , TotalCoverage, AlignmentCount ] ) | Group ( \u003cmetaDataType\u003eParent ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \u00270\u0027 : { \u0027layout\u0027 : \u0027Grid\u0027 , \u0027alignment\u0027 : { \u0027label\u0027 : [ \u0027\u003cmetaDataType\u003eParent\u0027 , \u0027TotalCoverage\u0027, \u0027AlignmentCount\u0027 ] } } } ) | Collect ( 500 ) ; Panel ( 0 ) | RetrievePanelOrnaments ( \\\"tools.shared.gridFullWidth\\\" ); Panel ( 0 ) | Clone ( 1 ) ;Select ( \u003cmetaDataType\u003eParent , 100 * ( UniqueCount ( \u003cmetaDataType\u003e ) ) / TotalLeafs ) .as ( [ \u003cmetaDataType\u003eParent , TotalCoverage ] ) | Group ( \u003cmetaDataType\u003eParent ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \u00271\u0027 : { \u0027layout\u0027 : \u0027Column\u0027 , \u0027alignment\u0027 : { \u0027label\u0027 : [ \u0027\u003cmetaDataType\u003eParent\u0027 ] , \u0027value\u0027 : [ \u0027TotalCoverage\u0027 ] } } } ) | Collect ( 500 ) ;  Panel ( 0 ) | Clone ( 2 ) ;Select ( \u003cmetaDataType\u003eParent , UniqueCount ( \u003cmetaDataType\u003e ) ) .as ( [ \u003cmetaDataType\u003eParent , UniqueCountof\u003cmetaDataType\u003e ] ) | Group ( \u003cmetaDataType\u003eParent ) | With ( Panel ( 2 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \u00272\u0027 : { \u0027layout\u0027 : \u0027Pie\u0027 , \u0027alignment\u0027 : { \u0027label\u0027 : [ \u0027\u003cmetaDataType\u003eParent\u0027 ] , \u0027value\u0027 : [ \u0027UniqueCountof\u003cmetaDataType\u003e\u0027 ] , \u0027tooltip\u0027 : [ ] } } } ) | Collect ( 500 ) ; Panel ( 0 ) | Clone ( 3 ) ;Database ( EnterpriseArchitecture ) | Select ( \u003cmetaDataType\u003e , System ) .as ( [ \u003cmetaDataType\u003e , RedundantSystem ] ) | Join ( ( System , inner.join , \u003cmetaDataType\u003e ) ) | Merge ( ( \u003cmetaDataType\u003e , inner.join , \u003cmetaDataType\u003e ) ) ; Panel ( 3 ) | SetPanelView ( \u0027visualization\u0027 ) ;Select ( \u003cmetaDataType\u003e , RedundantSystem ) .as ( [ \u003cmetaDataType\u003e , RedundantSystem ] ) | With ( Panel ( 3 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \\\"3\\\" : { \\\"layout\\\" : \\\"Grid\\\" , \\\"alignment\\\" : { \\\"label\\\" : [ \\\"\u003cmetaDataType\u003e\\\" , \\\"RedundantSystem\\\" ] } } } ) | Collect ( 500 ) ;Panel ( 3 ) | SetPanelSort ( cols \u003d [ \\\"\u003cmetaDataType\u003e\\\" ] , dirs \u003d [ \\\"desc\\\" ] ) ; Panel ( 0 ) | RetrievePanelOrnaments ( \\\"tools.shared.gridFullWidth\\\" ) ; Panel ( 0 ) | SetPanelLabel ( \\\"Coverage Percentages\\\" ) ;Panel ( 1 ) | SetPanelLabel ( \\\"Coverage Percentage Distributions\\\" ) ;Panel ( 2 ) | SetPanelLabel ( \\\"System Parameter Composition\\\" ) ;Panel ( 3 ) | SetPanelLabel ( \\\"Parameter Redundancy\\\" ) ;\",\"params\":[{\"paramName\":\"search\",\"view\":false,\"model\":{\"defaultValue\":\"\"}},{\"paramName\":\"System\",\"required\":true,\"view\":{\"displayType\":\"dropdown\",\"label\":\"Select a system\",\"description\":\"Select a system\",\"attributes\":{\"searchable\":true}},\"model\":{\"query\":\"(infinite \u003d Database(EnterpriseArchitecture) | Select(System) | Join((System, inner.join, Operational_Activity))| Filter(System ?like \\\"\u003csearch\u003e\\\") | Sort(cols\u003d[System], direction\u003d[asc]) | Iterate()) | Collect(50);\",\"infiniteQuery\":\"infinite | Collect(150);\",\"searchParam\":\"search\",\"dependsOn\":[\"concept\",\"search\"]}},{\"paramName\":\"metaDataType\",\"view\":{\"displayType\":\"dropdown\",\"label\":\"Metadata Type\",\"description\":\"Select the metadata parameter of interest\"},\"model\":{\"defaultOptions\":[\"System_Function\",\"Operational_Activity\",\"Capability\"],\"defaultValue\":\"\"},\"required\":true},{\"paramName\":\"Level\",\"view\":{\"displayType\":\"dropdown\",\"label\":\"Level\",\"description\":\"Select the metadata parameter level of interest\"},\"model\":{\"dependsOn\":[\"metaDataType\"],\"defaultValue\":\"Third\",\"query\":\"Database(HIMSSEA) | Select(\u003cmetaDataType\u003eParent__Level) | Collect(-1);\"}}],\"execute\":\"button\"}]}\u003c/encode\u003e\" ) ;CreateFrame ( grid ) .as ( [ \u0027FRAME518771\u0027 ] ) ;Database ( EnterpriseArchitecture ) | Select ( Operational_ActivityParent , Operational_ActivityParent__TotalLeafs , Operational_Activity , System , Operational_ActivityParent__Level ) .as ( [ Operational_ActivityParent , TotalLeafs , Operational_Activity , System , Level ] ) | Filter ( System \u003d\u003d [ \u0027System1034\u0027 ] ) | Filter ( Operational_ActivityParent__Level \u003d\u003d [ 4 ] ) | Join ( ( Operational_ActivityParent , inner.join , Operational_Activity ) , ( System , inner.join , Operational_Activity ) ) | Import ( ) ;Panel ( 0 ) | SetPanelLabel ( \u0027Coverage Percentages\u0027 ) | SetPanelView ( \u0027visualization\u0027 ) ;Select ( Operational_ActivityParent , 100 * ( UniqueCount ( Operational_Activity ) ) / TotalLeafs , ( UniqueCount ( Operational_Activity ) ) ) .as ( [ Operational_ActivityParent , TotalCoverage , AlignmentCount ] ) | Group ( Operational_ActivityParent ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \u00270\u0027 : { \u0027layout\u0027 : \u0027Grid\u0027 , \u0027alignment\u0027 : { \u0027label\u0027 : [ \u0027Operational_ActivityParent\u0027 , \u0027TotalCoverage\u0027 , \u0027AlignmentCount\u0027 ] } } } ) | Collect ( 500 ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.gridFullWidth\" ) ;Panel ( 0 ) | Clone ( 1 ) ;Select ( Operational_ActivityParent , 100 * ( UniqueCount ( Operational_Activity ) ) / TotalLeafs ) .as ( [ Operational_ActivityParent , TotalCoverage ] ) | Group ( Operational_ActivityParent ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \u00271\u0027 : { \u0027layout\u0027 : \u0027Column\u0027 , \u0027alignment\u0027 : { \u0027label\u0027 : [ \u0027Operational_ActivityParent\u0027 ] , \u0027value\u0027 : [ \u0027TotalCoverage\u0027 ] } } } ) | Collect ( 500 ) ;Panel ( 0 ) | Clone ( 2 ) ;Select ( Operational_ActivityParent , UniqueCount ( Operational_Activity ) ) .as ( [ Operational_ActivityParent , UniqueCountofOperational_Activity ] ) | Group ( Operational_ActivityParent ) | With ( Panel ( 2 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \u00272\u0027 : { \u0027layout\u0027 : \u0027Pie\u0027 , \u0027alignment\u0027 : { \u0027label\u0027 : [ \u0027Operational_ActivityParent\u0027 ] , \u0027value\u0027 : [ \u0027UniqueCountofOperational_Activity\u0027 ] , \u0027tooltip\u0027 : [ ] } } } ) | Collect ( 500 ) ;Panel ( 0 ) | Clone ( 3 ) ;Database ( EnterpriseArchitecture ) | Select ( Operational_Activity , System ) .as ( [ Operational_Activity , RedundantSystem ] ) | Join ( ( System , inner.join , Operational_Activity ) ) | Merge ( ( Operational_Activity , inner.join , Operational_Activity ) ) ;Panel ( 3 ) | SetPanelView ( \u0027visualization\u0027 ) ;Select ( Operational_Activity , RedundantSystem ) .as ( [ Operational_Activity , RedundantSystem ] ) | With ( Panel ( 3 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"3\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Operational_Activity\" , \"RedundantSystem\" ] } } } ) | Collect ( 500 ) ;Panel ( 3 ) | SetPanelSort ( cols \u003d [ \"Operational_Activity\" ] , dirs \u003d [ \"desc\" ] ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.gridFullWidth\" ) ;Panel ( 0 ) | SetPanelLabel ( \"Coverage Percentages\" ) ;Panel ( 1 ) | SetPanelLabel ( \"Coverage Percentage Distributions\" ) ;Panel ( 2 ) | SetPanelLabel ( \"System Parameter Composition\" ) ;Panel ( 3 ) | SetPanelLabel ( \"Parameter Redundancy\" ) ;"
}
{
  "layout": "panel",
  "rdbmsId": "7d4fcbb7-0bcc-4664-b379-b79939b3c812",
  "hidden": true,
  "engine": "EnterpriseArchitecture",
  "insightName": "Concordance Analysis - 0",
  "recipe": "AddPanel ( 0 ) ;Panel ( 0 ) | AddPanelEvents ( { \"onSingleClick\" : { \"Unfilter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eUnfilterFrame(\u003cSelectedColumn\u003e);\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabledVisuals\" : [ \"Grid\" ] , \"disabled\" : false } ] } , \"onBrush\" : { \"Filter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eif(IsEmpty(\u003cSelectedValues\u003e), UnfilterFrame(\u003cSelectedColumn\u003e), SetFrameFilter(\u003cSelectedColumn\u003e\u003d\u003d\u003cSelectedValues\u003e));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabled\" : false } ] } } ) ;Panel ( 0 ) | RetrievePanelEvents ( ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" , \"\u003cencode\u003e{\"type\":\"echarts\"}\u003c/encode\u003e\" ) ;Panel ( 0 ) | SetPanelView ( \"federate-view\" , \"\u003cencode\u003e{\"core_engine\":\"EnterpriseArchitecture\"}\u003c/encode\u003e\" ) ;CreateFrame ( GRID ) .as ( [ \u0027FRAME388567\u0027 ] ) ;Database ( EnterpriseArchitecture ) | Select ( System ) .as ( [ System ] ) | Import ( ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" ) ;Frame ( ) | Select ( System ) .as ( [ System ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"System\" ] } } } ) | Collect ( 500 ) ;Database ( EnterpriseArchitecture ) | Select ( System , System__Capability_Concordance , System__System_Function_Concordance , System__Operational_Activity_Concordance ) .as ( [ System , Capability_Concordance , System_Function_Concordance , Operational_Activity_Concordance ] ) | Merge ( ( System , inner.join , System ) ) ;Frame ( ) | Select ( Capability_Concordance , Operational_Activity_Concordance , System , System_Function_Concordance ) .as ( [ Capability_Concordance , Operational_Activity_Concordance , System , System_Function_Concordance ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Capability_Concordance\" , \"Operational_Activity_Concordance\" , \"System\" , \"System_Function_Concordance\" ] } } } ) | Collect ( 500 ) ;Panel ( 0 ) | Clone ( 1 ) ;Panel ( 0 ) | Clone ( 2 ) ;Panel ( 0 ) | Clone ( 3 ) ;Select ( System ) .as ( [ System ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"ParallelCoordinates\" , \"alignment\" : { \"dimension\" : [ \"System\" ] , \"series\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ;Select ( System , Capability_Concordance ) .as ( [ System , Capability_Concordance ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"ParallelCoordinates\" , \"alignment\" : { \"dimension\" : [ \"System\" , \"Capability_Concordance\" ] , \"series\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ;Select ( System , Capability_Concordance , Operational_Activity_Concordance ) .as ( [ System , Capability_Concordance , Operational_Activity_Concordance ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"ParallelCoordinates\" , \"alignment\" : { \"dimension\" : [ \"System\" , \"Capability_Concordance\" , \"Operational_Activity_Concordance\" ] , \"series\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ;Select ( System , Capability_Concordance , Operational_Activity_Concordance , System_Function_Concordance ) .as ( [ System , Capability_Concordance , Operational_Activity_Concordance , System_Function_Concordance ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"ParallelCoordinates\" , \"alignment\" : { \"dimension\" : [ \"System\" , \"Capability_Concordance\" , \"Operational_Activity_Concordance\" , \"System_Function_Concordance\" ] , \"series\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ;Panel ( 1 ) | AddPanelEvents ( { \"onSingleClick\" : { \"Unfilter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eUnfilterFrame(\u003cSelectedColumn\u003e);\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabledVisuals\" : [ \"Grid\" ] , \"disabled\" : false } ] } , \"onBrush\" : { \"Filter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eif(IsEmpty(\u003cSelectedValues\u003e), UnfilterFrame(\u003cSelectedColumn\u003e), SetFrameFilter(\u003cSelectedColumn\u003e\u003d\u003d\u003cSelectedValues\u003e));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabled\" : false } ] } } ) ;Panel ( 1 ) | RetrievePanelEvents ( ) ;Panel ( 1 ) | SetPanelView ( \"visualization\" , \"\u003cencode\u003e{\"type\":\"echarts\"}\u003c/encode\u003e\" ) ;Panel ( 1 ) | SetPanelView ( \"federate-view\" , \"\u003cencode\u003e{\"core_engine\":\"EnterpriseArchitecture\"}\u003c/encode\u003e\" ) ;CreateFrame ( grid ) .as ( [ \u0027FRAME523722\u0027 ] ) ;Database ( EnterpriseArchitecture ) | Query ( \"SELECT DISTINCT ?System ?Operational_Activity ?Concordance WHERE { \t{?Operational_Activity \u003chttp://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://semoss.org/ontologies/Concept/Operational_Activity\u003e} \t{?System \u003chttp://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://semoss.org/ontologies/Concept/System\u003e}\t\t{?rel \u003chttp://www.w3.org/2000/01/rdf-schema#subPropertyOf\u003e \u003chttp://semoss.org/ontologies/Relation/Performs\u003e } \t{?System ?rel ?Operational_Activity} \t{?rel \u003chttp://semoss.org/ontologies/Relation/Contains/Concordance\u003e ?Concordance} }\" ) | Import ( ) ;Panel ( 1 ) | SetPanelView ( \"visualization\" ) ;Select ( Concordance , System , Operational_Activity ) .as ( [ Concordance , System , Operational_Activity ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Concordance\" , \"System\" , \"Operational_Activity\" ] } } } ) | Collect ( 500 ) ;Panel ( 1 ) | SetPanelSort ( columns \u003d [ \"System\" ] , sort \u003d [ \"asc\" ] ) ;Frame ( ) | Select ( Concordance , System , Operational_Activity ) .as ( [ Concordance , System , Operational_Activity ] ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Concordance\" , \"System\" , \"Operational_Activity\" ] } } } ) | Collect ( 500 ) ;if ( ( HasDuplicates ( Operational_Activity ) ) , ( Select ( Operational_Activity , Count ( System ) ) .as ( [ Operational_Activity , CountofSystem ] ) | Group ( Operational_Activity ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Operational_Activity\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Operational_Activity , Count ( System ) ) .as ( [ Operational_Activity , CountofSystem ] ) | Group ( Operational_Activity ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Operational_Activity\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Operational_Activity , Concordance ) ) , ( Select ( Operational_Activity , Count ( System ) , Concordance ) .as ( [ Operational_Activity , CountofSystem , Concordance ] ) | Group ( Operational_Activity , Concordance ) | Filter ( Concordance \u003d\u003d \"Concordant\" ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Operational_Activity\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ \"Concordance\" ] } , \"groupByInfo\" : { \"selectedDim\" : \"Concordance\" , \"viewType\" : \"Individual Instance\" , \"instanceIndex\" : \"1\" , \"uniqueInstances\" : [ \"Concordant\" , \"Not_Concordant\" ] } } } ) | Collect ( 500 ) ) , ( Select ( Operational_Activity , Count ( System ) , Concordance ) .as ( [ Operational_Activity , CountofSystem , Concordance ] ) | Group ( Operational_Activity , Concordance ) | Filter ( Concordance \u003d\u003d \"Concordant\" ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Operational_Activity\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ \"Concordance\" ] } , \"groupByInfo\" : { \"selectedDim\" : \"Concordance\" , \"viewType\" : \"Individual Instance\" , \"instanceIndex\" : \"1\" , \"uniqueInstances\" : [ \"Concordant\" , \"Not_Concordant\" ] } } } ) | Collect ( 500 ) ) ) ;Frame ( ) | Select ( Operational_Activity , Count ( System ) , Concordance ) .as ( [ Operational_Activity , CountofSystem , Concordance ] ) | Group ( Operational_Activity , Concordance ) | Filter ( Concordance \u003d\u003d \"Not_Concordant\" ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Operational_Activity\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ \"Concordance\" ] , \"groupBy\" : [ \"Concordance\" ] } , \"groupByInfo\" : { \"selectedDim\" : \"Concordance\" , \"viewType\" : \"Individual Instance\" , \"instanceIndex\" : \"1\" , \"uniqueInstances\" : [ \"Concordant\" , \"Not_Concordant\" ] } } } ) | Collect ( 500 ) ;Frame ( ) | Select ( Operational_Activity , Count ( System ) , Concordance ) .as ( [ Operational_Activity , CountofSystem , Concordance ] ) | Group ( Operational_Activity , Concordance ) | Filter ( Concordance \u003d\u003d \"Concordant\" ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Operational_Activity\" ] , \"groupBy\" : [ \"Concordance\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ \"Concordance\" ] } , \"groupByInfo\" : { \"selectedDim\" : \"Concordance\" , \"viewType\" : \"Individual Instance\" , \"instanceIndex\" : \"1\" , \"uniqueInstances\" : [ \"Concordant\" , \"Not_Concordant\" ] } } } ) | Collect ( 500 ) ;Panel ( 1 ) | SetPanelLabel ( \"Operational Activity Concordance\" ) ;if ( ( HasDuplicates ( Operational_Activity ) ) , ( Select ( Operational_Activity , Count ( System ) ) .as ( [ Operational_Activity , CountofSystem ] ) | Group ( Operational_Activity ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Operational_Activity\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Operational_Activity , Count ( System ) ) .as ( [ Operational_Activity , CountofSystem ] ) | Group ( Operational_Activity ) | With ( Panel ( 1 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Operational_Activity\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;Panel ( 2 ) | AddPanelEvents ( { \"onSingleClick\" : { \"Unfilter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eUnfilterFrame(\u003cSelectedColumn\u003e);\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabledVisuals\" : [ \"Grid\" ] , \"disabled\" : false } ] } , \"onBrush\" : { \"Filter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eif(IsEmpty(\u003cSelectedValues\u003e), UnfilterFrame(\u003cSelectedColumn\u003e), SetFrameFilter(\u003cSelectedColumn\u003e\u003d\u003d\u003cSelectedValues\u003e));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabled\" : false } ] } } ) ;Panel ( 2 ) | RetrievePanelEvents ( ) ;Panel ( 2 ) | SetPanelView ( \"visualization\" , \"\u003cencode\u003e{\"type\":\"echarts\"}\u003c/encode\u003e\" ) ;Panel ( 2 ) | SetPanelView ( \"federate-view\" , \"\u003cencode\u003e{\"core_engine\":\"EnterpriseArchitecture\"}\u003c/encode\u003e\" ) ;CreateFrame ( grid ) .as ( [ \u0027FRAME523722\u0027 ] ) ;Database ( EnterpriseArchitecture ) | Query ( \"SELECT DISTINCT ?System ?System_Function ?Concordance WHERE { \t{?System_Function \u003chttp://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://semoss.org/ontologies/Concept/System_Function\u003e} \t{?System \u003chttp://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://semoss.org/ontologies/Concept/System\u003e}\t\t{?rel \u003chttp://www.w3.org/2000/01/rdf-schema#subPropertyOf\u003e \u003chttp://semoss.org/ontologies/Relation/Performs\u003e } \t{?System ?rel ?System_Function} \t{?rel \u003chttp://semoss.org/ontologies/Relation/Contains/Concordance\u003e ?Concordance} }\" ) | Import ( ) ;Panel ( 2 ) | SetPanelView ( \"visualization\" ) ;Select ( Concordance , System , System_Function ) .as ( [ Concordance , System , System_Function ] ) | With ( Panel ( 2 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"2\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Concordance\" , \"System\" , \"System_Function\" ] } } } ) | Collect ( 500 ) ;Panel ( 2 ) | SetPanelSort ( columns \u003d [ \"System\" ] , sort \u003d [ \"asc\" ] ) ;Frame ( ) | Select ( Concordance , System , System_Function ) .as ( [ Concordance , System , System_Function ] ) | With ( Panel ( 2 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"2\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Concordance\" , \"System\" , \"System_Function\" ] } } } ) | Collect ( 500 ) ;if ( ( HasDuplicates ( System_Function ) ) , ( Select ( System_Function , Count ( System ) ) .as ( [ System_Function , CountofSystem ] ) | Group ( System_Function ) | With ( Panel ( 2 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"2\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"System_Function\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( System_Function , Count ( System ) ) .as ( [ System_Function , CountofSystem ] ) | Group ( System_Function ) | With ( Panel ( 2 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"2\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"System_Function\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( System_Function , Concordance ) ) , ( Select ( System_Function , Count ( System ) , Concordance ) .as ( [ System_Function , CountofSystem , Concordance ] ) | Group ( System_Function , Concordance ) | Filter ( Concordance \u003d\u003d \"Concordant\" ) | With ( Panel ( 2 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"2\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"System_Function\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ \"Concordance\" ] } , \"groupByInfo\" : { \"selectedDim\" : \"Concordance\" , \"viewType\" : \"Individual Instance\" , \"instanceIndex\" : \"2\" , \"uniqueInstances\" : [ \"Concordant\" , \"Not_Concordant\" ] } } } ) | Collect ( 500 ) ) , ( Select ( System_Function , Count ( System ) , Concordance ) .as ( [ System_Function , CountofSystem , Concordance ] ) | Group ( System_Function , Concordance ) | Filter ( Concordance \u003d\u003d \"Concordant\" ) | With ( Panel ( 2 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"2\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"System_Function\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ \"Concordance\" ] } , \"groupByInfo\" : { \"selectedDim\" : \"Concordance\" , \"viewType\" : \"Individual Instance\" , \"instanceIndex\" : \"2\" , \"uniqueInstances\" : [ \"Concordant\" , \"Not_Concordant\" ] } } } ) | Collect ( 500 ) ) ) ;Frame ( ) | Select ( System_Function , Count ( System ) , Concordance ) .as ( [ System_Function , CountofSystem , Concordance ] ) | Group ( System_Function , Concordance ) | Filter ( Concordance \u003d\u003d \"Not_Concordant\" ) | With ( Panel ( 2 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"2\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"System_Function\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ \"Concordance\" ] , \"groupBy\" : [ \"Concordance\" ] } , \"groupByInfo\" : { \"selectedDim\" : \"Concordance\" , \"viewType\" : \"Individual Instance\" , \"instanceIndex\" : \"1\" , \"uniqueInstances\" : [ \"Concordant\" , \"Not_Concordant\" ] } } } ) | Collect ( 500 ) ;Frame ( ) | Select ( System_Function , Count ( System ) , Concordance ) .as ( [ System_Function , CountofSystem , Concordance ] ) | Group ( System_Function , Concordance ) | Filter ( Concordance \u003d\u003d \"Concordant\" ) | With ( Panel ( 2 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"2\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"System_Function\" ] , \"groupBy\" : [ \"Concordance\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ \"Concordance\" ] } , \"groupByInfo\" : { \"selectedDim\" : \"Concordance\" , \"viewType\" : \"Individual Instance\" , \"instanceIndex\" : \"2\" , \"uniqueInstances\" : [ \"Concordant\" , \"Not_Concordant\" ] } } } ) | Collect ( 500 ) ;Frame ( ) | Select ( System_Function , Count ( System ) , Concordance ) .as ( [ System_Function , CountofSystem , Concordance ] ) | Group ( System_Function , Concordance ) | Filter ( Concordance \u003d\u003d \"Not_Concordant\" ) | With ( Panel ( 2 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"2\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"System_Function\" ] , \"groupBy\" : [ \"Concordance\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ \"Concordance\" ] } , \"groupByInfo\" : { \"selectedDim\" : \"Concordance\" , \"viewType\" : \"Individual Instance\" , \"instanceIndex\" : \"1\" , \"uniqueInstances\" : [ \"Concordant\" , \"Not_Concordant\" ] } } } ) | Collect ( 500 ) ;if ( ( HasDuplicates ( System_Function , Concordance ) ) , ( Select ( System_Function , Count ( System ) , Concordance ) .as ( [ System_Function , CountofSystem , Concordance ] ) | Group ( System_Function , Concordance ) | Filter ( Concordance \u003d\u003d \"Concordant\" ) | With ( Panel ( 2 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"2\" : { \"layout\" : \"Pie\" , \"alignment\" : { \"label\" : [ \"System_Function\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ \"Concordance\" ] } , \"groupByInfo\" : { \"selectedDim\" : \"Concordance\" , \"viewType\" : \"Individual Instance\" , \"instanceIndex\" : \"2\" , \"uniqueInstances\" : [ \"Concordant\" , \"Not_Concordant\" ] } } } ) | Collect ( 500 ) ) , ( Select ( System_Function , Count ( System ) , Concordance ) .as ( [ System_Function , CountofSystem , Concordance ] ) | Group ( System_Function , Concordance ) | Filter ( Concordance \u003d\u003d \"Concordant\" ) | With ( Panel ( 2 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"2\" : { \"layout\" : \"Pie\" , \"alignment\" : { \"label\" : [ \"System_Function\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ \"Concordance\" ] } , \"groupByInfo\" : { \"selectedDim\" : \"Concordance\" , \"viewType\" : \"Individual Instance\" , \"instanceIndex\" : \"2\" , \"uniqueInstances\" : [ \"Concordant\" , \"Not_Concordant\" ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( System_Function , Concordance ) ) , ( Select ( System_Function , Count ( System ) , Concordance ) .as ( [ System_Function , CountofSystem , Concordance ] ) | Group ( System_Function , Concordance ) | Filter ( Concordance \u003d\u003d \"Concordant\" ) | With ( Panel ( 2 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"2\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"System_Function\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ \"Concordance\" ] } , \"groupByInfo\" : { \"selectedDim\" : \"Concordance\" , \"viewType\" : \"Individual Instance\" , \"instanceIndex\" : \"2\" , \"uniqueInstances\" : [ \"Concordant\" , \"Not_Concordant\" ] } } } ) | Collect ( 500 ) ) , ( Select ( System_Function , Count ( System ) , Concordance ) .as ( [ System_Function , CountofSystem , Concordance ] ) | Group ( System_Function , Concordance ) | Filter ( Concordance \u003d\u003d \"Concordant\" ) | With ( Panel ( 2 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"2\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"System_Function\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ \"Concordance\" ] } , \"groupByInfo\" : { \"selectedDim\" : \"Concordance\" , \"viewType\" : \"Individual Instance\" , \"instanceIndex\" : \"2\" , \"uniqueInstances\" : [ \"Concordant\" , \"Not_Concordant\" ] } } } ) | Collect ( 500 ) ) ) ;Panel ( 2 ) | SetPanelLabel ( \"System Function Concordance\" ) ;if ( ( HasDuplicates ( System_Function ) ) , ( Select ( System_Function , Count ( System ) ) .as ( [ System_Function , CountofSystem ] ) | Group ( System_Function ) | With ( Panel ( 2 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"2\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"System_Function\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( System_Function , Count ( System ) ) .as ( [ System_Function , CountofSystem ] ) | Group ( System_Function ) | With ( Panel ( 2 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"2\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"System_Function\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;AddPanel ( 3 ) ;Panel ( 3 ) | AddPanelEvents ( { \"onSingleClick\" : { \"Unfilter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eUnfilterFrame(\u003cSelectedColumn\u003e);\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabledVisuals\" : [ \"Grid\" ] , \"disabled\" : false } ] } , \"onBrush\" : { \"Filter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eif(IsEmpty(\u003cSelectedValues\u003e), UnfilterFrame(\u003cSelectedColumn\u003e), SetFrameFilter(\u003cSelectedColumn\u003e\u003d\u003d\u003cSelectedValues\u003e));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabled\" : false } ] } } ) ;Panel ( 3 ) | RetrievePanelEvents ( ) ;Panel ( 3 ) | SetPanelView ( \"visualization\" , \"\u003cencode\u003e{\"type\":\"echarts\"}\u003c/encode\u003e\" ) ;Panel ( 3 ) | SetPanelView ( \"federate-view\" , \"\u003cencode\u003e{\"core_engine\":\"EnterpriseArchitecture\"}\u003c/encode\u003e\" ) ;CreateFrame ( grid ) .as ( [ \u0027FRAME523722\u0027 ] ) ;Database ( EnterpriseArchitecture ) | Query ( \"SELECT DISTINCT ?System ?Capability ?Concordance WHERE { \t{?Capability \u003chttp://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://semoss.org/ontologies/Concept/Capability\u003e} \t{?System \u003chttp://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://semoss.org/ontologies/Concept/System\u003e}\t\t{?rel \u003chttp://www.w3.org/2000/01/rdf-schema#subPropertyOf\u003e \u003chttp://semoss.org/ontologies/Relation/Supports\u003e } \t{?System ?rel ?Capability} \t{?rel \u003chttp://semoss.org/ontologies/Relation/Contains/Concordance\u003e ?Concordance} }\" ) | Import ( ) ;Panel ( 3 ) | SetPanelView ( \"visualization\" ) ;Select ( Concordance , System , Capability ) .as ( [ Concordance , System , Capability ] ) | With ( Panel ( 3 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"3\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Concordance\" , \"System\" , \"Capability\" ] } } } ) | Collect ( 500 ) ;Panel ( 3 ) | SetPanelSort ( columns \u003d [ \"System\" ] , sort \u003d [ \"asc\" ] ) ;Frame ( ) | Select ( Concordance , System , Capability ) .as ( [ Concordance , System , Capability ] ) | With ( Panel ( 3 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"3\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Concordance\" , \"System\" , \"Capability\" ] } } } ) | Collect ( 500 ) ;if ( ( HasDuplicates ( Capability ) ) , ( Select ( Capability , Count ( System ) ) .as ( [ Capability , CountofSystem ] ) | Group ( Capability ) | With ( Panel ( 3 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"3\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Capability\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Capability , Count ( System ) ) .as ( [ Capability , CountofSystem ] ) | Group ( Capability ) | With ( Panel ( 3 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"3\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Capability\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Capability , Concordance ) ) , ( Select ( Capability , Count ( System ) , Concordance ) .as ( [ Capability , CountofSystem , Concordance ] ) | Group ( Capability , Concordance ) | Filter ( Concordance \u003d\u003d \"Concordant\" ) | With ( Panel ( 3 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"3\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Capability\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ \"Concordance\" ] } , \"groupByInfo\" : { \"selectedDim\" : \"Concordance\" , \"viewType\" : \"Individual Instance\" , \"instanceIndex\" : \"3\" , \"uniqueInstances\" : [ \"Concordant\" , \"Not_Concordant\" ] } } } ) | Collect ( 500 ) ) , ( Select ( Capability , Count ( System ) , Concordance ) .as ( [ Capability , CountofSystem , Concordance ] ) | Group ( Capability , Concordance ) | Filter ( Concordance \u003d\u003d \"Concordant\" ) | With ( Panel ( 3 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"3\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Capability\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ \"Concordance\" ] } , \"groupByInfo\" : { \"selectedDim\" : \"Concordance\" , \"viewType\" : \"Individual Instance\" , \"instanceIndex\" : \"3\" , \"uniqueInstances\" : [ \"Concordant\" , \"Not_Concordant\" ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Capability , Concordance ) ) , ( Select ( Capability , Count ( System ) , Concordance ) .as ( [ Capability , CountofSystem , Concordance ] ) | Group ( Capability , Concordance ) | With ( Panel ( 3 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"3\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Capability\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ \"Concordance\" ] } , \"groupByInfo\" : { \"selectedDim\" : \"Concordance\" , \"viewType\" : \"All Instances\" , \"instanceIndex\" : \"3\" , \"uniqueInstances\" : [ \"Concordant\" , \"Not_Concordant\" ] } } } ) | Collect ( 500 ) ) , ( Select ( Capability , Count ( System ) , Concordance ) .as ( [ Capability , CountofSystem , Concordance ] ) | Group ( Capability , Concordance ) | With ( Panel ( 3 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"3\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Capability\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ \"Concordance\" ] } , \"groupByInfo\" : { \"selectedDim\" : \"Concordance\" , \"viewType\" : \"All Instances\" , \"instanceIndex\" : \"3\" , \"uniqueInstances\" : [ \"Concordant\" , \"Not_Concordant\" ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Capability , Concordance ) ) , ( Select ( Capability , Count ( System ) , Concordance ) .as ( [ Capability , CountofSystem , Concordance ] ) | Group ( Capability , Concordance ) | Filter ( Concordance \u003d\u003d \"Concordant\" ) | With ( Panel ( 3 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"3\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Capability\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ \"Concordance\" ] } , \"groupByInfo\" : { \"selectedDim\" : \"Concordance\" , \"viewType\" : \"Individual Instance\" , \"instanceIndex\" : \"3\" , \"uniqueInstances\" : [ \"Concordant\" , \"Not_Concordant\" ] } } } ) | Collect ( 500 ) ) , ( Select ( Capability , Count ( System ) , Concordance ) .as ( [ Capability , CountofSystem , Concordance ] ) | Group ( Capability , Concordance ) | Filter ( Concordance \u003d\u003d \"Concordant\" ) | With ( Panel ( 3 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"3\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Capability\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ \"Concordance\" ] } , \"groupByInfo\" : { \"selectedDim\" : \"Concordance\" , \"viewType\" : \"Individual Instance\" , \"instanceIndex\" : \"3\" , \"uniqueInstances\" : [ \"Concordant\" , \"Not_Concordant\" ] } } } ) | Collect ( 500 ) ) ) ;Panel ( 3 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleStack\" : true } } } ) ;Panel ( 3 ) | RetrievePanelOrnaments ( \"tools.shared.toggleStack\" ) ;Panel ( 3 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleStack\" : false } } } ) ;Panel ( 3 ) | RetrievePanelOrnaments ( \"tools.shared.toggleStack\" ) ;Panel ( 3 ) | SetPanelLabel ( \"Capability Concordance\" ) ;if ( ( HasDuplicates ( Capability ) ) , ( Select ( Capability , Count ( System ) ) .as ( [ Capability , CountofSystem ] ) | Group ( Capability ) | With ( Panel ( 3 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"3\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Capability\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Capability , Count ( System ) ) .as ( [ Capability , CountofSystem ] ) | Group ( Capability ) | With ( Panel ( 3 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"3\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"Capability\" ] , \"value\" : [ \"CountofSystem\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;Panel ( 0 ) | SetPanelLabel ( \"System Concordance\" ) ;"
}